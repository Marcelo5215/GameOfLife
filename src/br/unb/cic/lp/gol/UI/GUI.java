/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.unb.cic.lp.gol.UI;

import javax.swing.JButton;

import br.unb.cic.lp.MementoGol.*;
import br.unb.cic.lp.gol.Cell;
import br.unb.cic.lp.gol.GameEngine;
import br.unb.cic.lp.gol.Statistics;
import br.unb.cic.lp.rules.quickLife;

import java.util.concurrent.TimeUnit;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author macel
 */
public class GUI extends javax.swing.JFrame {
	
	private static final long serialVersionUID = -2664928061594794745L;
	private GameEngine engine;
	private Statistics statistics;
	private Cell[][] board;
	private boolean flag;
	private Originator originator;
	private Caretaker caretaker;
	
    /**
     * Creates new form GUI
     */
    public GUI() {
		statistics = new Statistics();
		engine = new quickLife(40, 40, statistics);
		board = new Cell[engine.getHeight()][engine.getWidth()];
    	Cells =  new CellButton[engine.getHeight()][engine.getWidth()];
        for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
            	Cells[i][j] = new CellButton();
            	Cells[i][j].reset();
            	board[i][j] = new Cell();
            }
        }   
        originator = new Originator(engine.getHeight(), engine.getWidth());
		caretaker = new Caretaker();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem4 = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jInternalFrame1.setVisible(true);

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Stop");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Next Generation");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Dynamic");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Return");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Statistics");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jPanel1.setLayout(new java.awt.GridLayout(40, 60));

        jButton7.setText("Reset");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jMenu1.setText("Regras");

        jCheckBoxMenuItem1.setText("Conway");
        jMenu1.add(jCheckBoxMenuItem1);

        jCheckBoxMenuItem2.setText("High Life");
        jMenu1.add(jCheckBoxMenuItem2);

        jCheckBoxMenuItem3.setText("Life with out Death");
        jMenu1.add(jCheckBoxMenuItem3);

        jCheckBoxMenuItem4.setText("Seeds");
        jMenu1.add(jCheckBoxMenuItem4);

        jMenuBar1.add(jMenu1);

        jInternalFrame1.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 744, Short.MAX_VALUE)
                .addContainerGap())
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jInternalFrame1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jInternalFrame1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7)
                        .addGap(111, 111, 111)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addGap(0, 153, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jInternalFrame1)
        );

        //Adding Cells
        for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
        		jPanel1.add(Cells[i][j]);
            }
        }               
        
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
        for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
        		if(Cells[i][j].getBackground() == Color.BLACK){
					board[i][j].revive();
				}
				else
					board[i][j].kill();
            }
        } 
        engine.setCells(board);
        flag = true;
    	Thread t = new Thread(new computeNGeneration());
    	t.start();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    	flag = false;
    	engine.nextGeneration();
    	update(engine.getCells());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
        		if(Cells[i][j].getBackground() == Color.BLACK){
					board[i][j].revive();
				}
				else
					board[i][j].kill();
            }
        } 
        engine.setCells(board);
        
    	originator.set(engine.getCells());
		caretaker.add(originator.saveToMemento());
        
        engine.nextGeneration();
    	update(engine.getCells());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    	for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
        		if(Cells[i][j].getBackground() == Color.BLACK){
					board[i][j].revive();
				}
				else
					board[i][j].kill();
            }
        } 
        engine.setCells(board);
        flag = true;
    	Thread t = new Thread(new computeNGeneration());
    	t.start();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
		engine.setCells(originator.restoreFromMemento(caretaker.get()));
		update(engine.getCells());
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
    	for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
        		Cells[i][j].setBackground(Color.WHITE);
            }
        }   
    }//GEN-LAST:event_jButton7ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
               
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;  //Start
    private javax.swing.JButton jButton2;  //Stop
    private javax.swing.JButton jButton3;  //Ngeneration
    private javax.swing.JButton jButton4;  //Dynamic
    private javax.swing.JButton jButton5;  //Return
    private javax.swing.JButton jButton6;  //Statistics
    private javax.swing.JButton jButton7;  //Reset
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private CellButton[][] Cells;
    // End of variables declaration//GEN-END:variables
    
    
    private void update(Cell[][] Ngeneration){
    	for(int i =0 ; i< engine.getHeight() ; i++){
        	for(int j =0 ; j< engine.getWidth() ; j++){
        		if(Ngeneration[i][j].isAlive()){
        			board[i][j].revive();
					Cells[i][j].setBackground(Color.BLACK);
				}
				else{
					board[i][j].kill();
					Cells[i][j].setBackground(Color.WHITE);
				}
            }
        } 
    }
    
    private class computeNGeneration extends Thread{
    	public void run(){
    		while(engine.numberOfAliveCells() != 0 & flag){
            	engine.nextGeneration();
            	update(engine.getCells());
            	try {
    				TimeUnit.MILLISECONDS.sleep(500);
    			} catch (InterruptedException e) {
        			System.out.println(e.getMessage());
    			}
            }
    	}
    }
    
    private class CellButton extends JButton implements ActionListener{

		private static final long serialVersionUID = 1L;

		public CellButton(){
    		super();
    		addActionListener(this);
    	}
    	
		public void reset(){
			this.setBackground(Color.WHITE );
		}

		@Override
		public void actionPerformed(ActionEvent arg0) {
			this.setBackground(Color.BLACK);		
		}
    	
    }
   
}
